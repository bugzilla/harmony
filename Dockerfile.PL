#!/usr/bin/env perl
use 5.10.1;
use File::Find;
use experimental 'signatures';
use autodie;

my $output = shift @ARGV || 'Dockerfile';

open my $fh, '>', $output;

say $fh "# This file is generated by Dockerfile.PL. Do not edit directly.";
say $fh q{FROM perl:5.36.0-slim AS builder};
say $fh q{WORKDIR /app};
say $fh q{COPY Makefile.PL gen-cpanfile.pl Bugzilla.pm /app/};

find_extensions($fh);

RUN(q{
  perl Makefile.PL &&
  cpanm --notest Module::CPANfile &&
  make cpanfile &&
  cpanm --notest App::cpm &&
  apt-get update -y &&
  apt-get install -y libssl-dev libxml2-dev libexpat1-dev build-essential &&
  apt-get install -y default-libmysqlclient-dev &&
  cpm install --show-build-log-on-failure &&
  apt-get install -y apt-file &&
  apt-file update &&
  find local/lib -name '*.so' -exec ldd {} \; | awk '/=>/ {print $3}'|sort -u |xargs -IFILENAME apt-file search FILENAME | awk -F': ' '{print $1}'|sort -u > PACKAGES;
});

say $fh q{FROM perl:5.36.0-slim};
say $fh q{WORKDIR /app};
say $fh q{COPY --from=builder /app/PACKAGES /app/PACKAGES};
say $fh q{RUN apt-get update -y && apt-get install -y $(cat PACKAGES) };
# several lines should be merged together, and we need to make sure to clean up
# the apt package cache after installing packages to maintain a small image size
say $fh q{COPY --from=builder /app/local /app/local};
say $fh q{COPY --from=builder /app/MYMETA.* /app/};
say $fh q{COPY ./ /app/};

say $fh q{env LOCALCONFIG_ENV 1};
say $fh q{ENTRYPOINT ["perl", "bugzilla.pl"]};
say $fh q{CMD ["daemon"]};

sub find_extensions($fh) {
  find(
    sub {
      return unless -f;
      return unless $_ eq 'Config.pm' or $_ eq 'disabled';
      my $path = $File::Find::name;
      say $fh "COPY $path /app/$path";
    },
    'extensions',
  );
}

sub RUN($cmd) {
  # trim leading whitespace and trailing whitespace
  $cmd =~ s/^\s+|\s+$//g;
  # escape newlines for Dockerfile
  $cmd =~ s/\n/ \\\n/gs;
  say $fh "RUN $cmd";
}
